■Responder_c
	・WhatResponder(input)〜
		(input&"って何？")で戻る
	・RondomResponder()〜
		inputとは変数
		確率とは整数 = 3の乱数
		input = IA→RondomResponse_t[確率]
		(input)で戻る
	・PatternResponder(input)〜
		(dictionary→patternの配列要素数)回
			もし、(inputを(dictionary→pattern[回数-1])で正規表現マッチ) != 空ならば、
				マッチ文字とは変数 = inputを(dictionary→pattern[回数-1])で正規表現マッチ
				M_phrasesとは変数 = dictionary→phrases[回数-1]
				マッチ数とは整数 = M_phrasesで"|"の出現回数
				もし、マッチ数 != 0ならば、
					D_phrasesとは変数 = M_phrasesを"|"で区切る
					確率とは整数 = （マッチ数+1)の乱数
					D_phrases[確率] = D_phrases[確率]の"%match%"をマッチ文字に置換
					D_phrases[確率]で戻る
					抜ける
				違えば、
					M_phrases = M_phrasesの"%match%"をマッチ文字に置換
					M_phrasesで戻る
					抜ける
			違えば、
				RondomResponder()
		
	・TemplateResponder	//「○○は××です」テンプレ。名詞を当てはめていく。
	・MarkovResponder
	・GoogleResponder

■Emotion_c
	・あ

■Dictionary_c
	・pattern
	・phrases
	・ini(txt)〜
		(txtの配列要素数)回
			txtから「{タブ}」まで切り取ってpattern[回数-1]に代入
			txtから「{改行}」まで切り取ってphrases[回数-1]に代入

■AIメイン
	・RondomResponse_t
	・Dictionary_t
	・tx_num
	・応答メソッド(input)〜
		反応分岐とは整数 = 99の乱数
		もし、反応分岐>=0&&反応分岐<10ならば、
			responder→WhatResponder(input)
		もし、反応分岐>=10&&反応分岐<20ならば、
			responder→RondomResponder()
		もし、反応分岐>=20&&反応分岐<100ならば、
			responder→PatternResponder(input)
				
IAとはAIメイン
dictionaryとはDictionary_c
responderとはResponder_c


入力とは変数
返答とは変数
テキストとは変数
描画テキストとは変数
ロード()
GUI作成()


●母艦設計
	母艦について
		CW=640
		CH=480
		タイトルは"AI"
		ドラッグ移動=1

●ロード()
	IA→RondomResponse_t = 「RondomResponse.txt」を開く
	IA→Dictionary_t = 「Dictionary.txt」を開く
	dictionary→ini(IA→Dictionary_t)


●GUI作成()
	入力窓をエディタとして作成
	入力窓→X = 30
	入力窓→Y = 30
	入力窓→W = 400
	
	反映をボタンとして作成
	反映→X = 400
	反映→Y = 30
	反映→クリックした時は〜
		もし、入力窓→テキスト != 空ならば、
			入力 = 入力窓→テキスト
			返答 = IAで応答メソッド(入力)
			GUIメイン(返答)

●GUIメイン(output)
	IA→tx_num = IA→tx_num + 1
	もし、IA→tx_num >= 10 ならば、
		1回
			//描画テキストの1を配列削除//////////////////////////////////後回し
	ログ描画(output)
	
●ログ描画(output)
	画面クリア
	テキストに"あなた > "を追加
	テキストに入力を追加
	描画テキストにテキストを一行追加
	テキスト = 空
	テキストに"IA > "を追加
	テキストにoutputを追加
	描画テキストにテキストを一行追加
	テキスト = 空
	入力窓→テキスト = 空
	入力 = 空
	返答 = 空
	母艦の20,60へ描画テキストを文字描画


#-----------------------------------------------------------------------
#参考
/*
本解説
http://d.hatena.ne.jp/itog/20090613/1244905238
PHP正規表現チェッカー ver1.0.3
http://www.rider-n.sakura.ne.jp/regexp/regexp.php
人工無能うずら(人工痴能)の部屋
http://www.din.or.jp/~ohzaki/uzura.htm
人工無能「葵」
http://marie.saiin.net/~kisuku/munou/

http://developer.yahoo.co.jp/

yahooデベロッパー　アプリケーションID
NrSkwWexg66wr80BzR2tFArSl_ouJF1nwi7jUcZOeJukyKBfDDfM7Y.LIGxLRvGIBSLhBQ--

サンプルリクエストURL
http://jlp.yahooapis.jp/MAService/V1/parse?appid=<あなたのアプリケーションID>&results=ma,uniq&uniq_filter=9|10&sentence=%E5%BA%AD%E3%81%AB%E3%81%AF%E4%BA%8C%E7%BE%BD%E3%83%8B%E3%83%AF%E3%83%88%E3%83%AA%E3%81%8C%E3%81%84%E3%82%8B%E3%80%82


｢何か入力してください。｣と尋ねる。
文章はそれをUTF8N変換してURLエンコード。
「http://jlp.yahooapis.jp/MAService/V1/parse?appid=NrSkwWexg66wr80BzR2tFArSl_ouJF1nwi7jUcZOeJukyKBfDDfM7Y.LIGxLRvGIBSLhBQ--&results=ma&response=surface,pos,feature&sentence={文章}」をHTTPデータ取得
それをSJIS変換してレスポンスへ代入。

レスポンス＝レスポンスの"<word_list>"から"</word_list>"まで範囲切り取る
レスポンス＝レスポンスの"<word>"を""に置換
レスポンス＝レスポンスの"</word>"を「{改行}」に置換
レスポンス＝レスポンスの"<surface>"を""に置換
レスポンス＝レスポンスの"</surface><pos>"を"-"に置換
レスポンス＝レスポンスの"</pos>"を""に置換
レスポンスと言う


名前とは変数=「」と尋ねる
「｛名前｝」を「おはよう|こんにちは」で正規表現マッチ
表示。#abcdefg

会話参考
http://www8.atwiki.jp/nakamada_monge/pages/74.html
*/
